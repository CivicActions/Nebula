#!/bin/sh
cd "$(git rev-parse --show-toplevel)"
if [[ "$3" = "" ]]; then
  echo "Usage ./bin/deploy [frontend|backend] [subdomain] [domain]"
  exit 1
fi
DEPLOY="$1"
SUBDOMAIN="$2"
DOMAIN="$3"
NAME="$(git rev-parse --short HEAD)-$SUBDOMAIN.$DOMAIN"

# Provision a AWS Docker host.
docker-machine create "$NAME" --driver amazonec2
IP=$(docker-machine ip "$NAME" 2>&1)
PRIVATE_IP=$(docker-machine inspect --format='{{.Driver.PrivateIPAddress}}' "$NAME" 2>&1)
# Open port 80.
AWS='docker run --rm -e AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY -e AWS_VPC_ID -e AWS_DEFAULT_REGION anigeo/awscli'
$AWS ec2 revoke-security-group-ingress --group-name docker-machine --protocol tcp --port 80 --cidr 0.0.0.0/0
$AWS ec2 authorize-security-group-ingress --group-name docker-machine --protocol tcp --port 80 --cidr 0.0.0.0/0

# Setup DNS and CDN.
docker build -t cfcli devops/deployment/cfcli/
docker run -it --rm cfcli cfcli --token="$CLOUDFLARE_TOKEN" --email="$CLOUDFLARE_EMAIL" --domain "$DOMAIN" removerecord "$SUBDOMAIN"
docker run -it --rm cfcli cfcli --token="$CLOUDFLARE_TOKEN" --email="$CLOUDFLARE_EMAIL" --domain "$DOMAIN" -a -t A addrecord "$SUBDOMAIN" "$IP"
# Deploy code to host.
docker-machine ssh "$NAME" "sudo git clone https://github.com/CivicActions/nebula.git $PWD"

# Enable Docker client connection to remote Docker host.
eval "$(docker-machine env $NAME)"
# Assign our container to the appropriate IP in Docker Compose.
sed -i'' -e "s/[0-9:.]*:80/$PRIVATE_IP:80:80/" $DEPLOY/docker-compose.yml
# Build site on remote host.
./bin/build-$DEPLOY
echo
echo "Deployed $DEPLOY to https://$SUBDOMAIN.$DOMAIN"
